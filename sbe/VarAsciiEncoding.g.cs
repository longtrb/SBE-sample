// <auto-generated>
//     Generated SBE (Simple Binary Encoding) message codec
// </auto-generated>

#pragma warning disable 1591 // disable warning on missing comments
using System;
using System.Text;
using Org.SbeTool.Sbe.Dll;

namespace Sbe
{
    /// <summary>
    /// Variable length ASCII String.
    /// </summary>
    public sealed partial class VarAsciiEncoding
    {
        public const ushort SbeSchemaId = (ushort)1;
        public const ushort SbeSchemaVersion = (ushort)0;
        public const int Size = -1;

        private DirectBuffer _buffer;
        private int _offset;
        private int _actingVersion;

        public void Wrap(DirectBuffer buffer, int offset, int actingVersion)
        {
            _offset = offset;
            _actingVersion = actingVersion;
            _buffer = buffer;
        }


        public const uint LengthNullValue = 4294967295U;
        public const uint LengthMinValue = 0U;
        public const uint LengthMaxValue = 1073741824U;

        public uint Length
        {
            get
            {
                return _buffer.Uint32GetLittleEndian(_offset + 0);
            }
            set
            {
                _buffer.Uint32PutLittleEndian(_offset + 0, value);
            }
        }


        public const byte VarDataNullValue = (byte)255;
        public const byte VarDataMinValue = (byte)0;
        public const byte VarDataMaxValue = (byte)254;

        public override string ToString()
        {
            var sb = new StringBuilder(100);
            this.BuildString(sb);
            return sb.ToString();
        }

        internal void BuildString(StringBuilder builder)
        {
            if (_buffer == null)
            {
                return;
            }

            builder.Append('(');
            builder.Append("Length=");
            builder.Append(this.Length);
            builder.Append('|');
            builder.Append(')');

        }
    }
}
